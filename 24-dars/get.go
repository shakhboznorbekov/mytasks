package main

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"strings"
)

const url = "https://en.wikipedia.org/w/api.php?action=query&prop=extracts&exlimit=1&titles=earth&explaintext=1&exsectionformat=plain"

func main() {

	response, err := http.Get(url)
	if err != nil {
		fmt.Println("Errors1", err)
		return
	}

	var (
		bodyBytes []byte
		result    []AutoGenerated
		req       string
	)

	if response.StatusCode == http.StatusOK {
		bodyBytes, err = io.ReadAll(response.Body)
		if err != nil {
			fmt.Println("error2 ", err)
			return
		}
	}
	err = json.Unmarshal(bodyBytes, &result)
	if err != nil {
		fmt.Println("error3 ", err)
		return
	}

	for {
		fmt.Scanf("%s", &req)
		for _, item := range result {
			if strings.EqualFold(req, item.Query.Pages.Num9228.Title) {
				fmt.Println(item.Extract)
			}
		}
	}
}

type AutoGenerated struct {
	Batchcomplete string `json:"batchcomplete"`
	Query         struct {
		Normalized []struct {
			From string `json:"from"`
			To   string `json:"to"`
		} `json:"normalized"`
		Pages struct {
			Num9228 struct {
				Pageid  int    `json:"pageid"`
				Ns      int    `json:"ns"`
				Title   string `json:"title"`
				Extract string `json:"extract"`
			} `json:"9228"`
		} `json:"pages"`
	} `json:"query"`
}
